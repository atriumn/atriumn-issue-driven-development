name: Simple Development Pipeline

on:
  workflow_call:
    inputs:
      repo_name:
        required: true
        type: string
      issue_number:
        required: false
        type: string
      trigger_comment:
        required: false
        type: string
    secrets:
      REPO_TOKEN:
        required: true

  repository_dispatch:
    types: [pipeline-start]

jobs:
  start-pipeline:
    if: github.event_name == 'repository_dispatch' && github.event.action == 'pipeline-start'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo_name || github.event.repository.full_name }}
          token: ${{ secrets.REPO_TOKEN }}
          fetch-depth: 0
          
      - name: Start pipeline
        env:
          GH_TOKEN: ${{ secrets.REPO_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            ISSUE_NUMBER="${{ github.event.client_payload.issue_number }}"
            ISSUE_TITLE="${{ github.event.client_payload.issue_title }}"
            REPO_NAME="${{ github.event.repository.full_name }}"
          else
            ISSUE_NUMBER="${{ inputs.issue_number }}"
            REPO_NAME="${{ inputs.repo_name }}"
            ISSUE_TITLE=$(gh issue view $ISSUE_NUMBER --repo $REPO_NAME --json title --jq '.title')
          fi
          
          echo "Starting pipeline for issue #$ISSUE_NUMBER: $ISSUE_TITLE"
          
          gh issue comment $ISSUE_NUMBER --repo $REPO_NAME --body "
          ðŸš€ **Development Pipeline Started**
          
          **Issue**: #$ISSUE_NUMBER
          **Title**: $ISSUE_TITLE
          **Repository**: $REPO_NAME
          
          Pipeline is now running...
          "